{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/hourglass/hourglass.component.ts","webpack:///src/app/hourglass/hourglass.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HourglassComponent","httpClient","hourGlassElement","url","get","subscribe","value","serverData","dataSource","data","console","log","getData","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-hourglass></app-hourglass>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HourglassComponent} from './hourglass/hourglass.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatTableModule} from \"@angular/material/table\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HourglassComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, Injectable, OnInit, Type} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {NONE_TYPE} from \"@angular/compiler\";\n\ninterface HourGlassElement {\n  start: string;\n  stop: string;\n  period: string;\n}\n\n\n@Component({\n  selector: 'app-hourglass',\n  templateUrl: './hourglass.component.html',\n  styleUrls: ['./hourglass.component.css']\n})\n@Injectable()\nexport class HourglassComponent implements OnInit {\n\n\n  hourGlassElement = {};\n\n  // serverData: JSON;\n  serverData;\n  dataSource;\n\n//   ngOnInit() {\n//   this.yourService.getData()\n//     .subscribe((data: Type[]) => {\n//       this.data = data;\n//       this.dataSource = new MatTableDataSource(data);\n//     });\n// }\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  getData(): void {\n    const url = 'http://127.0.0.1:5000/moment/newData';\n    // const url = 'https://accelerator-zero.herokuapp.com/data';\n    this.httpClient.get(url).subscribe(value => {\n      this.serverData = value as JSON;\n      // this.dataSource = new Array(this.serverData);\n      // this.serverData = [\n      //   {username: 'bruce', email: 'li', password_hash: 'Holla'},\n      //   {username: 'mei', email: 'li', password_hash: 'You'}\n      // ];\n      // this.dataSource = new MatTableDataSource();\n      this.dataSource.data = value;\n    });\n    console.log(this.serverData);\n    console.log('From angular!');\n  }\n}\n","<mat-toolbar class=\"mat-elevation-z4\" color=\"primary\">Flask Accelerator Zero App</mat-toolbar>\n\n<div class=\"container\">\n\n  <button mat-fab (click)=\"getData()\">\n    <mat-icon>thumb_up</mat-icon>\n  </button>\n\n  <div class=\"break\"></div>\n\n  <table mat-table [dataSource]=\"serverData\" class=\"mat-elevation-z4\">\n\n    <ng-container matColumnDef=\"Start\">\n      <th mat-header-cell *matHeaderCellDef>Start</th>\n      <td mat-cell *matCellDef=\"let data\">{{data.username}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Stop\">\n      <th mat-header-cell *matHeaderCellDef>Stop</th>\n      <td mat-cell *matCellDef=\"let data\">{{data.email}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Period\">\n      <th mat-header-cell *matHeaderCellDef>Period</th>\n      <td mat-cell *matCellDef=\"let data\">{{data.password_hash}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"['Start', 'Stop', 'Period']\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: ['Start', 'Stop', 'Period']\"></tr>\n\n  </table>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}